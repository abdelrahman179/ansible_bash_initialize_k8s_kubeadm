---
- name: Install and configure HAProxy for Kubernetes API server load balancing
  hosts: loadbalancers
  become: yes
  gather_facts: yes
  vars:
    haproxy_version: "2.8"
    kubernetes_api_port: 6443
    haproxy_stats_port: 8404
    haproxy_stats_user: "admin"
    haproxy_stats_password: "admin123"
    
  tasks:
    # System preparation
    - name: Update apt package index
      apt:
        update_cache: yes
        cache_valid_time: 3600
      tags:
        - haproxy
        - preparation

    - name: Install required packages
      apt:
        name:
          - haproxy
          - curl
          - net-tools
        state: present
        update_cache: yes
      tags:
        - haproxy
        - installation

    # Backup original configuration
    - name: Backup original HAProxy configuration
      copy:
        src: /etc/haproxy/haproxy.cfg
        dest: /etc/haproxy/haproxy.cfg.backup
        remote_src: yes
        backup: yes
      tags:
        - haproxy
        - configuration

    # Create HAProxy configuration
    - name: Create HAProxy configuration for Kubernetes API load balancing
      template:
        src: ../templates/haproxy.cfg.j2
        dest: /etc/haproxy/haproxy.cfg
        backup: yes
        mode: '0644'
      notify:
        - restart haproxy
      tags:
        - haproxy
        - configuration

    # Enable and start HAProxy service
    - name: Enable and start HAProxy service
      systemd:
        name: haproxy
        enabled: yes
        state: started
        daemon_reload: yes
      tags:
        - haproxy
        - service

    # Configure firewall (if UFW is enabled)
    - name: Check if UFW is active
      command: ufw status
      register: ufw_status
      changed_when: false
      failed_when: false
      tags:
        - haproxy
        - firewall

    - name: Allow HAProxy ports through UFW (if active)
      ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
      loop:
        - "{{ kubernetes_api_port }}"
        - "{{ haproxy_stats_port }}"
        - "80"
        - "443"
      when: "'Status: active' in ufw_status.stdout"
      tags:
        - haproxy
        - firewall

    # Verification tasks
    - name: Check HAProxy configuration syntax
      command: haproxy -c -f /etc/haproxy/haproxy.cfg
      register: config_check
      changed_when: false
      tags:
        - haproxy
        - verification

    - name: Display configuration check result
      debug:
        msg: "HAProxy configuration: {{ 'Valid' if config_check.rc == 0 else 'Invalid - ' + config_check.stderr }}"
      tags:
        - haproxy
        - verification

    - name: Check HAProxy service status
      systemd:
        name: haproxy
      register: haproxy_status
      tags:
        - haproxy
        - verification

    - name: Display HAProxy service status
      debug:
        msg: "HAProxy service is {{ haproxy_status.status.ActiveState }} ({{ haproxy_status.status.SubState }})"
      tags:
        - haproxy
        - verification

    - name: Check HAProxy process information
      shell: ps aux | grep haproxy | grep -v grep
      register: haproxy_processes
      changed_when: false
      failed_when: false
      tags:
        - haproxy
        - verification

    - name: Display HAProxy processes
      debug:
        msg: "{{ 'HAProxy processes running' if haproxy_processes.stdout else 'No HAProxy processes found' }}"
      tags:
        - haproxy
        - verification

    - name: Check HAProxy listening ports
      shell: netstat -tlnp | grep haproxy || ss -tlnp | grep haproxy
      register: haproxy_ports
      changed_when: false
      failed_when: false
      tags:
        - haproxy
        - verification

    - name: Display HAProxy listening ports
      debug:
        var: haproxy_ports.stdout_lines
      when: haproxy_ports.stdout
      tags:
        - haproxy
        - verification

    - name: Verify HAProxy is listening on port 6443
      wait_for:
        port: 6443
        host: "{{ ansible_host }}"
        timeout: 5
      failed_when: false
      register: port_6443_check
      tags:
        - haproxy
        - verification

    - name: Display port 6443 status
      debug:
        msg: "Port 6443 (Kubernetes API): {{ 'Listening' if not port_6443_check.failed else 'Not listening' }}"
      tags:
        - haproxy
        - verification

    - name: Verify HAProxy stats interface on port 8404
      wait_for:
        port: 8404
        host: "{{ ansible_host }}"
        timeout: 5
      failed_when: false
      register: port_8404_check
      tags:
        - haproxy
        - verification

    - name: Display port 8404 status
      debug:
        msg: "Port 8404 (Stats interface): {{ 'Listening' if not port_8404_check.failed else 'Not listening' }}"
      tags:
        - haproxy
        - verification

    - name: Show HAProxy configuration file content
      debug:
        msg: "HAProxy configuration file exists at /etc/haproxy/haproxy.cfg"
      tags:
        - haproxy
        - verification

    - name: Test backend connectivity to master nodes
      wait_for:
        port: 6443
        host: "{{ item }}"
        timeout: 3
        state: started
      loop: "{{ groups['masters'] | map('extract', hostvars, 'ansible_host') | list }}"
      register: master_connectivity
      failed_when: false
      tags:
        - haproxy
        - verification
        - health_check

    - name: Display master nodes connectivity results
      debug:
        msg: "Master {{ item.item }} on port 6443: {{ 'Reachable' if not item.failed else 'NOT reachable' }}"
      loop: "{{ master_connectivity.results }}"
      tags:
        - haproxy
        - verification
        - health_check

  handlers:
    - name: restart haproxy
      systemd:
        name: haproxy
        state: restarted